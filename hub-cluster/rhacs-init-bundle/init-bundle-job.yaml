#
# Orininal batch job for creating RHACS cluster init-bundle
# Not sure why this version fail 'ImagePullBackOff' and the other doesn't
#

apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync 
  name: create-cluster-init-bundle
  namespace: stackrox
spec:
  completions: 1
  backoffLimit: 6
  template:
    spec:
      containers:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: central-htpasswd
                  key: password
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              if kubectl get secret/sensor-tls &> /dev/null; then
                echo "cluster-init bundle has already been configured, doing nothing"
                exit 0
              else

                # Wait for central to be ready
                attempt_counter=0
                max_attempts=20
                echo "Waiting for central to be available..."
                until $(curl -k --output /dev/null --silent --head --fail https://central); do
                    if [ ${attempt_counter} -eq ${max_attempts} ];then
                      echo "Max attempts reached"
                      exit 1
                    fi

                    printf '.'
                    attempt_counter=$(($attempt_counter+1))
                    echo "Made attempt $attempt_counter, waiting..."
                    sleep 5
                done

                echo "Configuring cluster-init bundle"
                export DATA={\"name\":\"{{ $.Values.init_bundle_name }}\"}
                curl -k -o /tmp/bundle.json -X POST -u "admin:$PASSWORD" -H "Content-Type: application/json" --data $DATA https://central/v1/cluster-init/init-bundles

                echo "Bundle received"
                #cat /tmp/bundle.json
                
                echo "Applying bundle"
                # No jq in container, python to the rescue
                cat /tmp/bundle.json | python3 -c "import sys, json; print(json.load(sys.stdin)['kubectlBundle'])" | base64 -d | oc apply -f -

                echo "Deleting bundle"
                rm /tmp/bundle.json

                # Touch SecuredCluster to force operator to reconcile
                oc label SecuredCluster $(oc get securedcluster -o custom-columns=NAME:.metadata.name --no-headers) cluster-init-job-status=created

                echo "ACS Cluster init bundle generated and applied"
              fi
          imagePullPolicy: Always
          name: create-cluster-init-bundle
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: rhacs-init-bundle
      serviceAccountName: rhacs-init-bundle
